SELECT `joke`.`id`, LEFT(`joketext`, 20)   .....
this LEFT will select only 20 chars from joketext column 

multicolumn primary key
CREATE TABLE `jokecategory` (
`jokeid`     INT NOT NULL, 
`categoryid` INT NOT NULL,
 PRIMARY KEY (`jokeid`, `categoryid`)
) 
This enforces the uniqueness that’s appropriate to a lookup table, preventing a
particular joke from being assigned to a specific category more than once

server-side includes (SSIs).
let you put commonly used snippets of HTML (and JavaScript, and
CSS) into include files that you can then use in multiple pages

include_once and require_once are also useful for loading function libraries
also a task that only needs to be done once, like connecting to the database.

visiting http://192.168.10.10/index.php?list.
This is called a single entry point or front controller.

Because the DatabaseTable class is inside the Ninja prefix, without the backslash prefix PHP will 
to load the class \Ninja\PDO rather than the inbuilt PHP class PDO.
The PDO class is in something called the global namespace—that is, a class that
exists at the very top level, effectively not inside a namespace. To reference a
class in the global namespace, we must prefix it with a backslash

"autoload": {
      "psr-4": {
      "Ninja\\": "classes/Ninja",
      "Ijdb\\": "classes/Ijdb"
   }
}
this inside composer to resolve these namespaces correctly 

using cookies, we have to be aware that browsers place a limit on the number and size of cookies allowed per website.
Some browsers will start deleting old cookies to make room for new ones after we’ve set 20 cookies from our site. 
Other browsers will allow up to 50 cookies per site, but will reject new cookies beyond this limit. Browsers 
also enforce a maximum combined size for all cookies from all websites, so an especially cookie-heavy site might 
cause our own site’s cookies to be deleted. Each time someone visits our website, all of the cookies are sent to
the web server. If we store a lot of information in the cookie, it can slow down the responsiveness of the website, 
because extra data must be transferred with each page view. Cookies can also be read by anyone who gains access to 
the computer they’re stored on, so cookies are only as secure as the computer being used to view the website.

an attack commonly known as session fixation. All the hacker needs to steal someone else’s session is the session ID.


there are three methods of connecting to a MYSQL from php 
1-the MYSQL Library (introduced in php 2 ) 
2-the MYSQLI (I mean improved) Library (introduced in php 5 ) 
3-the PDO Library (php data object) (introduced in php 5.1 ) 
mysql_connect() and mysql_query() and these mysql_* non existent functions
related to MYSQL Library, and they're deprecated 
same as  mysqli_* related to mysqli Library 
